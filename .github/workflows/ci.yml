# This file is part of the DiscoPoP software (http://www.discopop.tu-darmstadt.de)
#
# Copyright (c) 2020, Technische Universitaet Darmstadt, Germany
#
# This software may be modified and distributed under the terms of
# the 3-Clause BSD License.  See the LICENSE file in the package base
# directory for details.

name: "DiscoPoP CI"
on: [push, pull_request]

jobs:
  check-project-tags:
    runs-on: ubuntu-latest
    name: Check for DiscoPoP project tags
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
      - name: "Check all files for DiscoPoP License tag"
        run: |
          ERROR=""
          for FILE in $(find . -type f  -not -path "**/.git/**" -not -path "**/test/**" \
                                        -not -path "**/docs/**" \
                                        -not -path "**/LICENSE" -not -path "./VERSION" \
                                        -not -path "**/_version.py" \
                                        -not -path "**.png" -not -path "**.svg" \
                                        )
          do
            FILE_ERROR=""
            head -n 20 ${FILE} | grep -q "DiscoPoP software" || FILE_ERROR="yes"
            [ -z "$FILE_ERROR" ] || ERROR="yes"
            [ -z "$FILE_ERROR" ] || echo "Missing License tag at: ${FILE}" 
            [ -z "$FILE_ERROR" ] || continue
            head -n 20 ${FILE} | grep -q "Technische Universitaet Darmstadt, Germany" || FILE_ERROR="yes"
            [ -z "$FILE_ERROR" ] || ERROR="yes"
            [ -z "$FILE_ERROR" ] || echo "Missing License tag at: ${FILE}" 
            [ -z "$FILE_ERROR" ] || continue
            head -n 20 ${FILE} | grep -q "3-Clause BSD License" || FILE_ERROR="yes"
            [ -z "$FILE_ERROR" ] || ERROR="yes"
            [ -z "$FILE_ERROR" ] || echo "Missing License tag at: ${FILE}" 
          done
          # Report error (1), if license tags are missing
          echo "ERROR: ${ERROR}"
          [ -z "$ERROR" ] || exit 1
          # else, finish without error
          exit 0

  discopop_explorer:
    name: "Explorer"
    runs-on: ubuntu-20.04
    needs: check-project-tags
    strategy:
      matrix:
        python-version: [ 3.6 ]
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: "Install Dependencies"
        run: |
          python -m pip install -r discopop_explorer/requirements.txt
          python -m pip install mypy data-science-types black
      - name: "Run tests"
        run: python -m unittest -v
      - name: "Run MyPy Type Checker"
        run: python -m mypy -p discopop_explorer -p discopop_profiler
      - name: "Check formatting of discopop_profiler"
        run: python -m black -l 100 --check discopop_profiler

  discopop_profiler:
    name: "Profiler"
    runs-on: ubuntu-20.04
    needs: check-project-tags
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
      - name: "Install Dependencies"
        run: |
          sudo apt-get update
          sudo apt-get remove clang-8 clang-10 clang-9 clang-12 clang-11
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main"
          sudo apt-get update
          sudo apt-get install -y cmake libclang-11-dev clang-11 llvm-11
          sudo ln -s /usr/bin/clang-11 /usr/bin/clang || true
          sudo ln -s /usr/bin/clang++-11 /usr/bin/clang++ || true
          sudo ln -s /usr/bin/llvm-link-11 /usr/bin/llvm-link || true
          sudo ln -s /usr/bin/opt-11 /usr/bin/opt || true
      - name: "Build DiscoPoP Profiler"
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Debug ..
          make -j3
      - name: "Setup Python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: "Run DiscoPoP Profiler on test/ Targets"
        run: |
          chmod +x .github/workflows/tests/profiler.sh
          .github/workflows/tests/profiler.sh
